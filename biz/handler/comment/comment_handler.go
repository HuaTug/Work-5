// Code generated by hertz generator.

package comment

import (
	"Hertz_refactored/biz/model/comment"
	"Hertz_refactored/biz/pkg/errno"
	"Hertz_refactored/biz/pkg/logging"
	comment_service "Hertz_refactored/biz/service/comment"
	"Hertz_refactored/biz/utils"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/sirupsen/logrus"
)

// CreateComment .
// @router /v1/comment/publish [POST]
func CreateComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CreateCommentRequest
	err = c.BindAndValidate(&req)
	v, _ := c.Get("user_id")
	userId := utils.Transfer(v)
	s := comment_service.NewCommentService(ctx)
	resp := new(comment.CreateCommentResponse)
	if err = s.Create(req, userId); err == nil {
		logrus.Info(err)
		resp.Code = consts.StatusOK
		resp.Msg = "创建评论成功"
		c.JSON(consts.StatusOK, resp)
		return
	} else {
		resp.Code = consts.StatusBadRequest
		resp.Msg = "创建评论失败"
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
}

// ListComment .
// @router /v1/comment/list [GET]
func ListComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.ListCommentRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	s := comment_service.NewCommentService(ctx)
	comments, total, err := s.List(req)
	if err != nil {
		logrus.Info(err)
		c.JSON(consts.StatusBadRequest, "展示评论列表失败")
		return
	}
	c.JSON(consts.StatusOK, &comment.ListCommentResponse{
		Code:     errno.SuccessCode,
		Msg:      "展示评论信息",
		Comments: comments,
		Total:    total,
	})
}

// DeleteComment .
// @router /v1/comment/delete [DELETE]
func DeleteComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentDeleteRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	resp := new(comment.CommentDeleteResponse)
	s := comment_service.NewCommentService(ctx)
	if err := s.Delete(req); err != nil {
		logging.Error(err)
		resp.Code = consts.StatusBadRequest
		resp.Msg = "删除评论失败"
		c.JSON(consts.StatusBadRequest, resp)
	}
	resp.Code = consts.StatusOK
	resp.Msg = "成功删除一条记录"
	c.JSON(consts.StatusOK, resp)
}
