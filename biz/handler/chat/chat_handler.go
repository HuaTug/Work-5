// Code generated by hertz generator.

package chat

import (
	"Hertz_refactored/biz/model/chat"
	"Hertz_refactored/biz/pkg/logging"
	"Hertz_refactored/biz/pkg/utils"
	chat_service "Hertz_refactored/biz/service/chats"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	_ "github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Chat .
// @router /chats [GET]
func Chat(ctx context.Context, c *app.RequestContext) {
	var err error
	var req chat.MessageChatRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	v, _ := c.Get("user_id")
	userId := utils.Transfer(v)
	if err := chat_service.NewService(ctx).ChatInit(req, c, userId); err != nil {
		logging.Error(err)
		return
	}
	/*
		c.JSON(consts.StatusBadRequest, "Msg")
		不要引入这段代码 否则无法进行websocket通信
		这段代码执行后会退出函数。在 Go 中，当函数调用了 return 语句后，函数的执行将立即终止，并且将返回值（如果有的话）传递给调用者。
	*/
}
